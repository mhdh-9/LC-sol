int kadane(int *v,int n)
{
    int mx=0,sum=0;
    for (int i=0; i < n; i++)
	    {
	        sum=max(v[i],v[i]+sum);
	        mx=max(mx,sum);
	    }
    return mx;
}

int main()
 {
	int t ; cin>>t;
	while(t--)
	{
	    int n ;cin>>n;
	    int m ;cin>>m;
	    int a[n][m];
	    for (int i=0; i < n; i++)
	        for (int j=0; j < m; j++)
	            cin>>a[i][j];
	    int v[n],mx=0;
	    
	    for(int l=0;l<m-1;l++)
	    {
	        fill(v,v+n,0);
	        for(int r=l;r<m;r++)
                {
                   for (int j=0; j < n; j++)
	                    v[j]+=a[j][r];     
	               int k=kadane(v,n);
	               mx=max(mx,k); 
                }	    
	    }
	    cout<<mx<<"\n";
	}
	return 0;
}
