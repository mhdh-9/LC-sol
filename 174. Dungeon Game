class Solution {
public:
int solve(int i,int j,int m,int n , vector<vector<int>>&v,vector<vector<int>>&dp)
{
    
	if(i==m-1 and j==n-1)return v[i][j];
    
    if(dp[i][j]!=INT_MAX)return dp[i][j];
    
    dp[i][j]=v[i][j];
    int x=INT_MIN;
    if(j+1<n)
        x=max(x,v[i][j]+solve(i,j+1,m,n,v,dp));
    if(i+1<m)
        x=max(x,v[i][j]+solve(i+1,j,m,n,v,dp));
    
    dp[i][j]=min(dp[i][j],x);
    
    return dp[i][j];
}

    int calculateMinimumHP(vector<vector<int>>& dungeon) {
        int m=dungeon.size();//rows
        int n=dungeon[0].size();//cols

     vector<vector<int>> dp (m,vector<int>(n,INT_MAX));
	int ans=solve(0,0,m,n,dungeon,dp);
        if(ans<0)ans=1-ans;
        else ans=1;
        return ans;
    }
};
