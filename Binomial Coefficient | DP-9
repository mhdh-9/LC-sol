#include<bits/stdc++.h>
using namespace std;
#define up(i,j,n) for (int i=j; i < int(n); i++)
#define dn(i,j,n) for (int i=j; i > int(n); i--)
#define pb push_back
#define mp make_pair

int mod =1e9 +7;
vector<vector<long long>>dp;
long long int solve(int n,int k)
{
if(n<=0 or k<0 or n<k)
            return 0;

if(dp[n][k]!=-1)
        return dp[n][k];

if(n==k or k==0)
        return 1;           //   C(n, 0) = C(n, n) = 1

//C(n, k) = C(n-1, k-1) + C(n-1, k)

else return dp[n][k]=(solve(n-1,k-1)%mod + solve(n-1,k)%mod)%mod; 

}
int main()
 {
	int t ; cin>>t;
	while(t--)
	{
	    int n,k;cin>>n>>k;
	    dp.resize(n+1,vector<long long>(k+1,-1));
	    cout<<solve(n,min(k,n-k))<<"\n";
	    dp.clear();
	}
	return 0;
}
